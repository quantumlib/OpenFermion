name: Continuous Integration
on: [pull_request]

jobs:
  format:
    name: Format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r dev_tools/requirements/envs/format.env.txt
      - name: Format
        run: check/format-incremental
  mypy:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r dev_tools/requirements/envs/mypy.env.txt
      - name: Type check
        run: check/mypy
  pylint:
    name: Lint check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r dev_tools/requirements/envs/pylint.env.txt
      - name: Lint
        run: check/pylint
  pytest-max-compat:
    name: Pytest max compat
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install requirements
        run: |
          pip install -r dev_tools/requirements/max_compat/pytest-max-compat.env.txt
      - name: Pytest check
        run: check/pytest
        shell: bash
  pytest:
    name: Pytest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install requirements
        run: |
          pip install -r dev_tools/requirements/envs/pytest.env.txt
          pip install cirq-core${{matrix.cirq-version}}
      - name: Pytest check
        run: check/pytest
        shell: bash
  pytest-extra:
    name: Pytest extra
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install requirements
        run: |
          pip install -r dev_tools/requirements/envs/pytest-extra.env.txt
          pip install cirq-core${{matrix.cirq-version}}
      - name: Pytest check resources
        run: check/pytest -m 'not slow' src/openfermion/resource_estimates
        shell: bash
  coverage:
    name: Coverage check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Install requirements
        run: pip install -r dev_tools/requirements/envs/pytest.env.txt
      - name: Coverage check
        run: check/pytest-and-incremental-coverage